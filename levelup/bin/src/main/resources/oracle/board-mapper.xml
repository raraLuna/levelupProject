<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">

	<resultMap type="Board" id="resultBoard">
	
		<id column="BOARD_NUM" property="boardNum" />
		<result column="BOARD_WRITER" property="boardWriter"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="BOARD_ORIGINAL_FILENAME" property="boardOriginalFileName"/>
		<result column="BOARD_RENAME_FILENAME" property="boardRenameFileName"/>
		<result column="BOARD_REF" property="boardRef"/>
		<result column="BOARD_REPLY_REF" property="boardReplyRef"/>
		<result column="BOARD_LEV" property="boardLev"/>
		<result column="BOARD_REPLY_SEQ" property="boardReplySeq"/>
		<result column="BOARD_READCOUNT" property="boardReadCount"/>
		<result column="BOARD_DATE" property="boardDate"/>
	</resultMap>
	
	<select id="selectTop3" resultMap="resultBoard">
		select * from (select rownum rnum, board_num, board_title, board_readcount
		    from (select * from board 
		    	where board_lev = 1 order by board_readcount desc))
		    	where rnum Between 1 and 3
	</select>
	
	<select id="getListCount" resultType="_int">
		select count(*) from board
	</select>
	
	<select id="selectList" parameterType="Paging" resultMap="resultBoard">
		select * from (select rownum rnum, board_num, board_writer, board_title, board_content, 
		              board_original_filename, board_rename_filename, 
		              board_ref, board_reply_ref, 
		              board_lev, board_reply_seq, board_readcount, board_date 
		                     from (select * from board 
	                               order by board_ref desc, board_reply_ref desc, 
	                               board_lev asc, board_reply_seq asc)) 
	                               where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="selectBoard" parameterType="_int" resultMap="resultBoard">
		select * from board where board_num = #{boadnum}
	</select>
	
	<select id="selectSearchTitle" parameterType="SearchDatePaging" resultMap="resultBoard">
		select * from (select rownum rnum, board_num, board_writer, board_title, board_content, board_original_filename, board_rename_filename, board_ref, board_reply_ref, board_lev, board_reply_seq, board_readcount, board_date 
		from (select * from board 
			where board_lev = 1 
			and board_title like '%' || #{keyword} || '%' 
			order by board_ref desc, board_reply_ref desc, board_lev asc, board_reply_seq asc)) 
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="selectSearchWriter" parameterType="SearchDatePaging" resultMap="resultBoard">
		select * from (select rownum rnum, board_num, board_writer, board_title, board_content, board_original_filename, board_rename_filename, board_ref, board_reply_ref, board_lev, board_reply_seq, board_readcount, board_date 
		from (select * from board 
			where board_lev = 1 
			and board_writer like '%' || #{keyword} || '%' 
			order by board_ref desc, board_reply_ref desc, board_lev asc, board_reply_seq asc)) 
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="selectSearchDate" parameterType="SearchDatePaging" resultMap="resultBoard">
	<![CDATA[
		select * from (select rownum rnum, board_num, board_writer, board_title, board_content, board_original_filename, board_rename_filename, board_ref, board_reply_ref, board_lev, board_reply_seq, board_readcount, board_date 
		from (select * from board 
			where board_lev = 1 
			and board_date between  #{begin} and #{end}  
			order by board_ref desc, board_reply_ref desc, board_lev asc, board_reply_seq asc)) 
		where rnum >= #{startRow} and rnum <= #{endRow}
		 ]]>
	</select>
	
	<select id="selectSearchTitleCount" parameterType="string" resultType="_int">
		select count(*) from board where board_lev = 1 and board_title like '%' || #{keyword} || '%'
	</select>
	
	<select id="selectSearchWriterCount" parameterType="string" resultType="_int">
		select count(*) from board where board_lev = 1 and board_writer like '%' || #{keyword} || '%'
	</select>
	
	<select id="selectSearchDateCount" parameterType="SearchDate" resultType="_int">
		select count(*) from board where board_lev = 1 and board_date between #{begin} and #{end}
	</select>
	
	<insert id="insertOriginBoard" parameterType="Board">
		insert into board values  
			((select max(board_num) + 1 from board),
			 #{boardWriter}, #{boardTitle}, #{boardContent}, #{boardOriginalFileName}, #{boardRenameFileName},  
				(select max(board_num) + 1 from board), null, default, default, default, default)
	</insert>
		
	<insert id="insertReply" parameterType="Board">
		<if test="boardLev == 2">
		insert into board values 
			((select max(board_num) + 1 from board),
			 #{boardWriter}, #{boardTitle}, #{boardContent}, null, null, #{boardRef}, 
				(select max(board_num) + 1 from board), 2, #{boardReplySeq}, default, default)
		</if>
		
		<if test="boardLev == 3">
			insert into board values 
				((select max(board_num) + 1 from board),
					 #{boardWriter}, #{boardTitle}, #{boardContent}, null, null, #{boardRef}, #{boardReplyRef}, 3,
					 #{boardReplySeq}, default, default
		</if>
	</insert>
	
	<update id="addReadCount" parameterType="_int">
		update board set board_readcount = board_readcount + 1
 			where board_num = #{boardnum}
	</update>
	
	<update id="updateReplySeq" parameterType="Board">
		<if test="boardLev == 2">
			update board set board_reply_seq = board_reply_seq + 1 
			where board_ref = #{boardRef} and board_lev = #{boardLev}
		</if>
		<if test="boardLev == 3">
			update board set board_reply_seq = board_reply_seq + 1 
			where board_ref = #{boardRef} and board_lev = #{boardLev}
			and board_reply_ref = #{boardReplyRef}
		</if>
	</update>
	
	<update id="updateOriginBoard" parameterType="Board">
		update board set board_title = #{boardTitle}, 
			board_content = #{boardContent}, 
			board_original_filename = #{boardOriginalFileName}, 
			board_rename_filename = #{boardRenameFileName} 
			where board_num = #{boardNum} 
	</update>
	
	<update id="updateReplyBoard" parameterType="Board">
		update board set board_title = #{boardTitle}, 
			board_content = #{boardContent}, 
			where board_num = #{boardNum} 
	</update>
	
	
	<delete id="deleteBoard" parameterType="Board">
		<if test="boardLev == 2">
			delete from board where board_ref = #{boardNum}
		</if>
		<if test="boardLev == 3">
			delete from board where board_reply_ref = #{boardNum}
		</if>
		<if test="boardLev == 1">
			delete from board where board_num = #{boardNum}
		</if>
	</delete>
	
	
</mapper>
